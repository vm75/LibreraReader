diff --git a/Android.mk b/Android.mk
new file mode 100644
index 000000000..7114f4a4c
--- /dev/null
+++ b/Android.mk
@@ -0,0 +1,213 @@
+# Android makefile to be used with ndk-build.
+#
+# Run ndk-build with the following arguments:
+#	APP_BUILD_SCRIPT=platform/java/Android.mk (this file)
+#	APP_PROJECT_DIR=build/android (where you want the output)
+#	APP_PLATFORM=android-16
+#	APP_OPTIM=release (or debug)
+#	APP_ABI=all (or armeabi, armeabi-v7a, arm64-v8a, x86, x86_64, mips, mips64)
+#
+# The top-level Makefile will invoke ndk-build with appropriate arguments
+# if you run 'make android'.
+#
+# Use the MUPDF_EXTRA_CFLAGS, MUPDF_EXTRA_CPPFLAGS, MUPDF_EXTRA_LDFLAGS,
+# and MUPDF_EXTRA_LDLIBS variables to add more compiler flags.
+#
+# LOCAL_C_INCLUDES paths are relative to the NDK root directory.
+# LOCAL_SRC_FILES paths are relative to LOCAL_PATH.
+#
+# We make sure to use absolute paths everywhere, so this makefile works
+# regardless of where it is called from.
+
+LOCAL_PATH := $(call my-dir)
+include $(CLEAR_VARS)
+
+include $(LIBWEBP_ROOT)/Android.mk
+include $(CLEAR_VARS)
+
+ifeq ($(TARGET_ARCH_ABI),arm64-v8a)
+HAVE_NEON := yes
+endif
+
+ifeq ($(TARGET_ARCH_ABI),x86_64)
+HAVE_AVX := yes
+HAVE_AVX2 := yes
+HAVE_FMA := yes
+HAVE_SSE4_1 := yes
+endif
+
+include $(MUPDF_ROOT)/Makelists
+include $(CLEAR_VARS)
+
+# --- Build a local static library for core mupdf ---
+
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+LOCAL_MODULE := mupdf_core
+
+LOCAL_C_INCLUDES := $(MUPDF_ROOT)/include $(MUPDF_ROOT)/generated $(LIBWEBP_ROOT)/src
+
+LOCAL_CFLAGS := \
+	-ffunction-sections -fdata-sections \
+	-D_FILE_OFFSET_BITS=32 \
+	-DNOTO_SMALL \
+	-DAA_BITS=8 \
+	-DOPJ_STATIC -DOPJ_HAVE_INTTYPES_H -DOPJ_HAVE_STDINT_H \
+
+LOCAL_CFLAGS += -fPIC
+
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(FREETYPE_CFLAGS)))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(HARFBUZZ_CFLAGS)))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(JBIG2DEC_CFLAGS)))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(LIBJPEG_CFLAGS)))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(MUJS_CFLAGS)))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(OPENJPEG_CFLAGS)))
+
+LOCAL_CFLAGS += $(filter-out -I%,$(FREETYPE_CFLAGS))
+LOCAL_CFLAGS += $(filter-out -I%,$(HARFBUZZ_CFLAGS))
+LOCAL_CFLAGS += $(filter-out -I%,$(JBIG2DEC_CFLAGS))
+LOCAL_CFLAGS += $(filter-out -I%,$(LIBJPEG_CFLAGS))
+LOCAL_CFLAGS += $(filter-out -I%,$(MUJS_CFLAGS))
+LOCAL_CFLAGS += $(filter-out -I%,$(OPENJPEG_CFLAGS))
+
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/fitz/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/fitz/*.cpp)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/pdf/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/xps/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/svg/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/cbz/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/html/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/source/helpers/pkcs7/*.c)
+LOCAL_SRC_FILES += $(wildcard $(MUPDF_ROOT)/generated/*.c)
+
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+
+include $(BUILD_STATIC_LIBRARY)
+
+# --- Build local static libraries for thirdparty libraries ---
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_freetype
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(FREETYPE_SRC))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(FREETYPE_CFLAGS) $(FREETYPE_BUILD_CFLAGS)))
+LOCAL_CFLAGS += $(filter-out -I%,$(FREETYPE_CFLAGS) $(FREETYPE_BUILD_CFLAGS))
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_jbig2dec
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(JBIG2DEC_SRC))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(JBIG2DEC_CFLAGS) $(JBIG2DEC_BUILD_CFLAGS)))
+LOCAL_CFLAGS += $(filter-out -I%,$(JBIG2DEC_CFLAGS) $(JBIG2DEC_BUILD_CFLAGS))
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_harfbuzz
+LOCAL_CPP_EXTENSION := .cc
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(HARFBUZZ_SRC))
+LOCAL_C_INCLUDES := $(MUPDF_ROOT)/include $(MUPDF_ROOT)/generated
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(HARFBUZZ_CFLAGS) $(HARFBUZZ_BUILD_CFLAGS)))
+LOCAL_CPPFLAGS += $(filter-out -I%,$(HARFBUZZ_CFLAGS) $(HARFBUZZ_BUILD_CFLAGS))
+LOCAL_CPPFLAGS += $(MUPDF_EXTRA_CPPFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_libjpeg
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(LIBJPEG_SRC))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(LIBJPEG_CFLAGS) $(LIBJPEG_BUILD_CFLAGS)))
+LOCAL_CFLAGS += $(filter-out -I%,$(LIBJPEG_CFLAGS) $(LIBJPEG_BUILD_CFLAGS))
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_mujs
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(MUJS_SRC))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(MUJS_CFLAGS) $(MUJS_BUILD_CFLAGS)))
+LOCAL_CFLAGS += $(filter-out -I%,$(MUJS_CFLAGS) $(MUJS_BUILD_CFLAGS))
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+
+LOCAL_MODULE += mupdf_thirdparty_openjpeg
+LOCAL_SRC_FILES += $(patsubst %,$(MUPDF_ROOT)/%,$(OPENJPEG_SRC))
+LOCAL_C_INCLUDES += $(patsubst -I%,$(MUPDF_ROOT)/%,$(filter -I%,$(OPENJPEG_CFLAGS) $(OPENJPEG_BUILD_CFLAGS)))
+LOCAL_CFLAGS += $(filter-out -I%,$(OPENJPEG_CFLAGS) $(OPENJPEG_BUILD_CFLAGS))
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+include $(BUILD_STATIC_LIBRARY)
+
+# --- Build the final JNI shared library ---
+
+include $(CLEAR_VARS)
+
+LOCAL_CFLAGS    := $(APP_CFLAGS)
+LOCAL_CPPFLAGS  := $(APP_CPPFLAGS)
+LOCAL_ARM_MODE  := $(APP_ARM_MODE)
+
+LOCAL_MODULE := mupdf_java
+
+LOCAL_C_INCLUDES += $(MUPDF_ROOT)/include
+
+LOCAL_CFLAGS += -DHAVE_ANDROID
+LOCAL_CFLAGS += $(MUPDF_EXTRA_CFLAGS)
+
+LOCAL_SRC_FILES += $(MUPDF_ROOT)/platform/java/mupdf_native.c
+
+LOCAL_STATIC_LIBRARIES += webpmux webpdemux webp
+LOCAL_STATIC_LIBRARIES += mupdf_core
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_freetype
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_harfbuzz
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_jbig2dec
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_libjpeg
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_mujs
+LOCAL_STATIC_LIBRARIES += mupdf_thirdparty_openjpeg
+
+LOCAL_LDLIBS += $(MUPDF_EXTRA_LDLIBS)
+LOCAL_LDLIBS += -ljnigraphics
+LOCAL_LDLIBS += -llog
+LOCAL_LDLIBS += -lz
+LOCAL_LDLIBS += -lm
+
+LOCAL_LDFLAGS := -Wl,--gc-sections
+LOCAL_LDFLAGS += $(MUPDF_EXTRA_LDFLAGS)
+
+include $(BUILD_STATIC_LIBRARY)
diff --git a/Makelists b/Makelists
new file mode 100644
index 000000000..f3dc7224e
--- /dev/null
+++ b/Makelists
@@ -0,0 +1,285 @@
+# List of source files for all thirdparty libraries.
+
+# --- FREETYPE2 ---
+
+FREETYPE_CFLAGS += -Ithirdparty/freetype/include
+FREETYPE_CFLAGS += -Iscripts/freetype
+
+FREETYPE_BUILD_CFLAGS += -DFT_CONFIG_MODULES_H=\"slimftmodules.h\"
+FREETYPE_BUILD_CFLAGS += -DFT_CONFIG_OPTIONS_H=\"slimftoptions.h\"
+FREETYPE_BUILD_CFLAGS += -DFT2_BUILD_LIBRARY
+
+FREETYPE_SRC += thirdparty/freetype/src/base/ftbase.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftbbox.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftbitmap.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftdebug.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftfntfmt.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftgasp.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftglyph.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftinit.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftstroke.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftsynth.c
+FREETYPE_SRC += thirdparty/freetype/src/base/ftsystem.c
+FREETYPE_SRC += thirdparty/freetype/src/base/fttype1.c
+FREETYPE_SRC += thirdparty/freetype/src/cff/cff.c
+FREETYPE_SRC += thirdparty/freetype/src/cid/type1cid.c
+FREETYPE_SRC += thirdparty/freetype/src/psaux/psaux.c
+FREETYPE_SRC += thirdparty/freetype/src/pshinter/pshinter.c
+FREETYPE_SRC += thirdparty/freetype/src/psnames/psnames.c
+FREETYPE_SRC += thirdparty/freetype/src/raster/raster.c
+FREETYPE_SRC += thirdparty/freetype/src/sfnt/sfnt.c
+FREETYPE_SRC += thirdparty/freetype/src/smooth/smooth.c
+FREETYPE_SRC += thirdparty/freetype/src/truetype/truetype.c
+FREETYPE_SRC += thirdparty/freetype/src/type1/type1.c
+
+# --- HARFBUZZ ---
+
+HARFBUZZ_CFLAGS += -Ithirdparty/harfbuzz/src
+
+HARFBUZZ_BUILD_CFLAGS += -Iinclude/mupdf
+HARFBUZZ_BUILD_CFLAGS += $(FREETYPE_CFLAGS)
+
+HARFBUZZ_BUILD_CFLAGS += -DHAVE_FALLBACK=1
+HARFBUZZ_BUILD_CFLAGS += -DHAVE_FREETYPE
+HARFBUZZ_BUILD_CFLAGS += -DHAVE_OT
+HARFBUZZ_BUILD_CFLAGS += -DHAVE_ROUND
+HARFBUZZ_BUILD_CFLAGS += -DHAVE_UCDN
+HARFBUZZ_BUILD_CFLAGS += -DHB_NO_MT
+HARFBUZZ_BUILD_CFLAGS += -DHB_NO_PRAGMA_GCC_DIAGNOSTIC_ERROR
+
+HARFBUZZ_BUILD_CFLAGS += -Dhb_malloc_impl=hb_malloc
+HARFBUZZ_BUILD_CFLAGS += -Dhb_calloc_impl=hb_calloc
+HARFBUZZ_BUILD_CFLAGS += -Dhb_realloc_impl=hb_realloc
+HARFBUZZ_BUILD_CFLAGS += -Dhb_free_impl=hb_free
+
+HARFBUZZ_BUILD_CFLAGS += -fno-exceptions
+HARFBUZZ_BUILD_CFLAGS += -fno-rtti
+HARFBUZZ_BUILD_CFLAGS += -fno-threadsafe-statics
+HARFBUZZ_BUILD_CFLAGS += -fvisibility-inlines-hidden
+HARFBUZZ_BUILD_CFLAGS += -std=gnu++11
+
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-blob.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-buffer.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-buffer-serialize.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-common.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-face.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-fallback-shape.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-font.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ft.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-font.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-layout.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-map.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-arabic.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-default.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-hangul.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-hebrew.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-indic.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-indic-table.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-myanmar.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-thai.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-tibetan.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-use.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-complex-use-table.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-fallback.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-shape-normalize.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ot-tag.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-set.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shape.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shape-plan.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-shaper.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-ucdn.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-unicode.cc
+HARFBUZZ_SRC += thirdparty/harfbuzz/src/hb-warning.cc
+
+# --- JPEG-XR (optional, used by XPS) ---
+
+JPEGXR_CFLAGS += -Ithirdparty/jpegxr
+JPEGXR_CFLAGS += -Ithirdparty/jpegxr/Software
+JPEGXR_CFLAGS += -DHAVE_JPEGXR
+
+JPEGXR_BUILD_CFLAGS += -Wno-tautological-compare
+
+JPEGXR_SRC += thirdparty/jpegxr/Software/algo.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/api.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/cr_parse.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/flags.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/init.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/io.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/jpegxr_pixelformat.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/r_parse.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/r_strip.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/r_tile_frequency.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/r_tile_spatial.c
+JPEGXR_SRC += thirdparty/jpegxr/Software/x_strip.c
+
+# --- LIBJPEG ---
+
+LIBJPEG_CFLAGS += -Ithirdparty/libjpeg
+LIBJPEG_CFLAGS += -Iscripts/libjpeg
+
+LIBJPEG_SRC += thirdparty/libjpeg/jaricom.c
+LIBJPEG_SRC += thirdparty/libjpeg/jcomapi.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdapimin.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdapistd.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdarith.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdatadst.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdatasrc.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdcoefct.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdcolor.c
+LIBJPEG_SRC += thirdparty/libjpeg/jddctmgr.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdhuff.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdinput.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdmainct.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdmarker.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdmaster.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdmerge.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdpostct.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdsample.c
+LIBJPEG_SRC += thirdparty/libjpeg/jdtrans.c
+LIBJPEG_SRC += thirdparty/libjpeg/jerror.c
+LIBJPEG_SRC += thirdparty/libjpeg/jfdctflt.c
+LIBJPEG_SRC += thirdparty/libjpeg/jfdctfst.c
+LIBJPEG_SRC += thirdparty/libjpeg/jfdctint.c
+LIBJPEG_SRC += thirdparty/libjpeg/jidctflt.c
+LIBJPEG_SRC += thirdparty/libjpeg/jidctfst.c
+LIBJPEG_SRC += thirdparty/libjpeg/jidctint.c
+LIBJPEG_SRC += thirdparty/libjpeg/jmemmgr.c
+LIBJPEG_SRC += thirdparty/libjpeg/jquant1.c
+LIBJPEG_SRC += thirdparty/libjpeg/jquant2.c
+LIBJPEG_SRC += thirdparty/libjpeg/jutils.c
+
+
+# --- MUJS ---
+
+MUJS_CFLAGS += -Ithirdparty/mujs
+
+MUJS_SRC += thirdparty/mujs/one.c
+
+# --- ZLIB ---
+
+ZLIB_CFLAGS += -Ithirdparty/zlib
+
+ZLIB_BUILD_CFLAGS += -DHAVE_UNISTD_H
+ZLIB_BUILD_CFLAGS += -DHAVE_STDARG_H
+
+ZLIB_SRC += thirdparty/zlib/adler32.c
+ZLIB_SRC += thirdparty/zlib/compress.c
+ZLIB_SRC += thirdparty/zlib/crc32.c
+ZLIB_SRC += thirdparty/zlib/deflate.c
+ZLIB_SRC += thirdparty/zlib/inffast.c
+ZLIB_SRC += thirdparty/zlib/inflate.c
+ZLIB_SRC += thirdparty/zlib/inftrees.c
+ZLIB_SRC += thirdparty/zlib/trees.c
+ZLIB_SRC += thirdparty/zlib/uncompr.c
+ZLIB_SRC += thirdparty/zlib/zutil.c
+
+# --- JBIG2DEC ---
+
+JBIG2DEC_CFLAGS += -Ithirdparty/jbig2dec
+
+JBIG2DEC_BUILD_CFLAGS += -Iinclude
+JBIG2DEC_BUILD_CFLAGS += -DHAVE_STDINT_H
+JBIG2DEC_BUILD_CFLAGS += -DJBIG_EXTERNAL_MEMENTO_H=\"mupdf/memento.h\"
+
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith_iaid.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_arith_int.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_generic.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_halftone.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_huffman.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_image.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_metadata.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_mmr.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_page.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_refinement.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_segment.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_symbol_dict.c
+JBIG2DEC_SRC += thirdparty/jbig2dec/jbig2_text.c
+
+# --- OPENJPEG ---
+
+OPENJPEG_CFLAGS += -Ithirdparty/openjpeg/src/lib/openjp2
+OPENJPEG_CFLAGS += -DOPJ_STATIC
+OPENJPEG_CFLAGS += -DOPJ_HAVE_INTTYPES_H
+OPENJPEG_CFLAGS += -DOPJ_HAVE_STDINT_H
+
+OPENJPEG_BUILD_CFLAGS += -Ithirdparty/openjpeg/src/lib/openjp2
+OPENJPEG_BUILD_CFLAGS += -DMUTEX_pthread=0
+
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/bio.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/cio.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/dwt.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/event.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/function_list.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/image.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/invert.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/j2k.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/jp2.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/mct.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/mqc.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/openjpeg.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/pi.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/raw.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/t1.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/t2.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/tcd.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/tgt.c
+OPENJPEG_SRC += thirdparty/openjpeg/src/lib/openjp2/thread.c
+
+# --- FREEGLUT ---
+
+GLUT_CFLAGS += -Ithirdparty/freeglut/include
+
+GLUT_BUILD_CFLAGS += -Ithirdparty/freeglut/src
+GLUT_BUILD_CFLAGS += -DHAVE_UNISTD_H
+GLUT_BUILD_CFLAGS += -DHAVE_STDINT_H
+GLUT_BUILD_CFLAGS += -DHAVE_X11_EXTENSIONS_XRANDR_H
+
+GLUT_SRC += thirdparty/freeglut/src/fg_callbacks.c
+GLUT_SRC += thirdparty/freeglut/src/fg_cursor.c
+GLUT_SRC += thirdparty/freeglut/src/fg_display.c
+GLUT_SRC += thirdparty/freeglut/src/fg_ext.c
+GLUT_SRC += thirdparty/freeglut/src/fg_font.c
+GLUT_SRC += thirdparty/freeglut/src/fg_font_data.c
+GLUT_SRC += thirdparty/freeglut/src/fg_gamemode.c
+GLUT_SRC += thirdparty/freeglut/src/fg_geometry.c
+GLUT_SRC += thirdparty/freeglut/src/fg_gl2.c
+GLUT_SRC += thirdparty/freeglut/src/fg_init.c
+GLUT_SRC += thirdparty/freeglut/src/fg_input_devices.c
+GLUT_SRC += thirdparty/freeglut/src/fg_joystick.c
+GLUT_SRC += thirdparty/freeglut/src/fg_main.c
+GLUT_SRC += thirdparty/freeglut/src/fg_menu.c
+GLUT_SRC += thirdparty/freeglut/src/fg_misc.c
+GLUT_SRC += thirdparty/freeglut/src/fg_overlay.c
+GLUT_SRC += thirdparty/freeglut/src/fg_spaceball.c
+GLUT_SRC += thirdparty/freeglut/src/fg_state.c
+GLUT_SRC += thirdparty/freeglut/src/fg_stroke_mono_roman.c
+GLUT_SRC += thirdparty/freeglut/src/fg_stroke_roman.c
+GLUT_SRC += thirdparty/freeglut/src/fg_structure.c
+GLUT_SRC += thirdparty/freeglut/src/fg_teapot.c
+GLUT_SRC += thirdparty/freeglut/src/fg_videoresize.c
+GLUT_SRC += thirdparty/freeglut/src/fg_window.c
+
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_cursor_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_display_x11_glx.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_ext_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_gamemode_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_glutfont_definitions_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_init_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_input_devices_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_joystick_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_main_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_menu_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_spaceball_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_state_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_state_x11_glx.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_structure_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_window_x11.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_window_x11_glx.c
+GLUT_SRC += thirdparty/freeglut/src/x11/fg_xinput_x11.c
+
+GLUT_LIBS += -lGL
+GLUT_LIBS += -lX11
+GLUT_LIBS += -lXrandr
diff --git a/source/fitz/load-webp.c b/source/fitz/load-webp.c
new file mode 100644
index 000000000..710d8274e
--- /dev/null
+++ b/source/fitz/load-webp.c
@@ -0,0 +1,58 @@
+#include "mupdf/fitz.h"
+
+#include <webp/decode.h>
+#include <webp/demux.h>
+#include <webp/types.h>
+
+fz_pixmap *
+fz_load_webp(fz_context *ctx, unsigned char *p, size_t total)
+{
+
+    struct WebPBitstreamFeatures features;
+    WebPData webp_data;
+    WebPDemuxer* demux = NULL;
+
+    if (WebPGetFeatures(p, total, &features) != VP8_STATUS_OK)
+    fz_throw(ctx, FZ_ERROR_GENERIC, "unable to extract webp features");
+
+    int width = features.width;
+    int height = features.height;
+
+    webp_data.bytes = p;
+    webp_data.size = total;
+
+    demux = WebPDemux(&webp_data);
+
+    uint8_t* rgba = features.has_alpha ? WebPDecodeRGBA(p, total, NULL, NULL) : WebPDecodeRGB(p, total, NULL, NULL);
+
+    if (rgba == NULL)
+        fz_throw(ctx, FZ_ERROR_GENERIC, "failed decoding webp image");
+
+    fz_pixmap *image;
+    image = fz_new_pixmap(ctx, fz_device_rgb(ctx), width, height, features.has_alpha ? 1:0);
+
+    fz_clear_pixmap(ctx, image);
+    fz_unpack_tile(ctx, image, rgba, image->n, 8, image->stride, 1);
+
+    WebPFree(rgba);
+
+
+return image;
+}
+
+void
+fz_load_webp_info(fz_context *ctx, unsigned char *p, size_t total, int *wp, int *hp, int *xresp, int *yresp, fz_colorspace **cspacep)
+{
+    struct WebPBitstreamFeatures features;
+
+    if (WebPGetFeatures(p, total, &features) != VP8_STATUS_OK)
+        fz_throw(ctx, FZ_ERROR_GENERIC, "unable to extract webp features");
+
+    int width = features.width;
+    int height = features.height;
+
+    *wp = width;
+    *hp = height;
+    *xresp = 72;
+    *yresp = 72;
+}
